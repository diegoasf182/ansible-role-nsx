---
- name: Download OVFtool
  get_url:
    url: "{{ ovf_zip_url }}"
    dest: "{{ tmp_dir }}"

- name: Unzip the OVFtool
  unarchive: src="{{ tmp_dir }}/{{ ovf_zip }}" dest="{{ tmp_dir }}" copy=no

- name: Confirm OVFtool
  shell: /tmp/ovftool/ovftool "{{ nsx_ova_http }}"
  register: ovftest

- name: Set OVFtool Status
  set_fact:
    ovfstatus: "{{ ovftest.rc }}"

- name: Fail if OVFtool not responding
  fail: msg="OVFtool not able to reach ovf descriptor"
  when: ovfstatus != "0"

- name: deploy NSX OVA
  shell: /tmp/ovftool/ovftool
              --name="{{ nsx_name }}"
              --acceptAllEulas
              --allowExtraConfig
              --noSSLVerify
              --diskMode=thin
              --datastore="{{ nsx_datastore }}"
              --network={{ vds_name }}
              --ipProtocol=IPv4
              --prop:vsm_cli_passwd_0="{{ cli_pass }}"
              --prop:vsm_cli_en_passwd_0="{{ cli_pass }}"
              --prop:vsm_hostname="{{ nsx_hostname }}"
              --prop:vsm_ip_0="{{ nsx_ip }}"
              --prop:vsm_netmask_0="{{ nsx_netmask }}"
              --prop:vsm_gateway_0="{{ nsx_gateway }}"
              --prop:vsm_dns1_0="{{ nsx_dns }}"
              --prop:vsm_domain_0="{{ nsx_domain }}"
              --prop:vsm_ntp_0="{{ ntp_svr }}"
              --prop:vsm_isSSHEnabled="{{ nsx_ssh_enabled }}"
              "{{ nsx_ova_http }}"
              vi://{{ vcenter_user | urlencode }}:'{{ vcenter_password | urlencode }}'@'{{ vcenter_host }}'/'{{ datacenter_name }}'/host/'{{ vio_cluster_mgmt }}'/
  register: nsxmanager
  when: ovfstatus == "0"
